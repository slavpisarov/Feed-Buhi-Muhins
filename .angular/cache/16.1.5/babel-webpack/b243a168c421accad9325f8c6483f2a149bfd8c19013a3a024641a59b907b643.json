{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/platform-browser\";\nexport class EmojiDisplayComponent {\n  constructor(domSanitizer) {\n    this.domSanitizer = domSanitizer;\n    this.updateEmoji();\n  }\n  ngOnChanges() {\n    this.updateEmoji();\n  }\n  updateEmoji() {\n    const emojiHTML = `&#x${this.emojiUnicode};`;\n    this.emojiHTML = this.domSanitizer.bypassSecurityTrustHtml(emojiHTML);\n  }\n}\nEmojiDisplayComponent.ɵfac = function EmojiDisplayComponent_Factory(t) {\n  return new (t || EmojiDisplayComponent)(i0.ɵɵdirectiveInject(i1.DomSanitizer));\n};\nEmojiDisplayComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: EmojiDisplayComponent,\n  selectors: [[\"app-emoji-display\"]],\n  inputs: {\n    emojiUnicode: \"emojiUnicode\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  decls: 1,\n  vars: 1,\n  consts: [[3, \"innerHTML\"]],\n  template: function EmojiDisplayComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelement(0, \"div\", 0);\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"innerHTML\", ctx.emojiHTML, i0.ɵɵsanitizeHtml);\n    }\n  },\n  encapsulation: 2\n});","map":{"version":3,"names":["EmojiDisplayComponent","constructor","domSanitizer","updateEmoji","ngOnChanges","emojiHTML","emojiUnicode","bypassSecurityTrustHtml","i0","ɵɵdirectiveInject","i1","DomSanitizer","selectors","inputs","features","ɵɵNgOnChangesFeature","decls","vars","consts","template","EmojiDisplayComponent_Template","rf","ctx","ɵɵelement","ɵɵproperty","ɵɵsanitizeHtml"],"sources":["/Users/slavpisarov/Documents/GitHub/Feed-Buhi-Muhins/src/app/emoji-display/emoji-display.component.ts"],"sourcesContent":["import { Component, Input } from '@angular/core';\nimport { DomSanitizer, SafeHtml } from '@angular/platform-browser';\n\n@Component({\n  selector: 'app-emoji-display',\n  template: `\n    <div [innerHTML]=\"emojiHTML\"></div>\n  `\n})\nexport class EmojiDisplayComponent {\n  @Input() emojiUnicode: string | undefined;\n  emojiHTML: SafeHtml | undefined;\n\n  constructor(private domSanitizer: DomSanitizer) {\n    this.updateEmoji();\n  }\n\n  ngOnChanges(): void {\n    this.updateEmoji();\n  }\n\n  private updateEmoji(): void {\n    const emojiHTML = `&#x${this.emojiUnicode};`;\n    this.emojiHTML = this.domSanitizer.bypassSecurityTrustHtml(emojiHTML);\n  }\n}"],"mappings":";;AASA,OAAM,MAAOA,qBAAqB;EAIhCC,YAAoBC,YAA0B;IAA1B,KAAAA,YAAY,GAAZA,YAAY;IAC9B,IAAI,CAACC,WAAW,EAAE;EACpB;EAEAC,WAAWA,CAAA;IACT,IAAI,CAACD,WAAW,EAAE;EACpB;EAEQA,WAAWA,CAAA;IACjB,MAAME,SAAS,GAAG,MAAM,IAAI,CAACC,YAAY,GAAG;IAC5C,IAAI,CAACD,SAAS,GAAG,IAAI,CAACH,YAAY,CAACK,uBAAuB,CAACF,SAAS,CAAC;EACvE;;AAfWL,qBAAqB,C;mBAArBA,qBAAqB,EAAAQ,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,YAAA;AAAA;AAArBX,qBAAqB,C;QAArBA,qBAAqB;EAAAY,SAAA;EAAAC,MAAA;IAAAP,YAAA;EAAA;EAAAQ,QAAA,GAAAN,EAAA,CAAAO,oBAAA;EAAAC,KAAA;EAAAC,IAAA;EAAAC,MAAA;EAAAC,QAAA,WAAAC,+BAAAC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MAH9Bb,EAAA,CAAAe,SAAA,aAAmC;;;MAA9Bf,EAAA,CAAAgB,UAAA,cAAAF,GAAA,CAAAjB,SAAA,EAAAG,EAAA,CAAAiB,cAAA,CAAuB"},"metadata":{},"sourceType":"module","externalDependencies":[]}