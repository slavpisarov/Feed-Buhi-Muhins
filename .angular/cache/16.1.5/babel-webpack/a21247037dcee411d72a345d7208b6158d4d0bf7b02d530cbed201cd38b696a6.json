{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/platform-browser\";\nexport class EmojiDisplayComponent {\n  constructor(domSanitizer) {\n    this.domSanitizer = domSanitizer;\n    // Get the HTML representation of the emoji and sanitize it\n    const emojiUnicode = '1F604'; // Replace this with the Unicode code point of your desired emoji\n    const emojiHTML = `&#x${emojiUnicode};`;\n    this.emojiHTML = this.domSanitizer.bypassSecurityTrustHtml(emojiHTML);\n  }\n}\nEmojiDisplayComponent.ɵfac = function EmojiDisplayComponent_Factory(t) {\n  return new (t || EmojiDisplayComponent)(i0.ɵɵdirectiveInject(i1.DomSanitizer));\n};\nEmojiDisplayComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: EmojiDisplayComponent,\n  selectors: [[\"app-emoji-display\"]],\n  decls: 1,\n  vars: 1,\n  consts: [[3, \"innerHTML\"]],\n  template: function EmojiDisplayComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelement(0, \"div\", 0);\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"innerHTML\", ctx.emojiHTML, i0.ɵɵsanitizeHtml);\n    }\n  },\n  encapsulation: 2\n});","map":{"version":3,"names":["EmojiDisplayComponent","constructor","domSanitizer","emojiUnicode","emojiHTML","bypassSecurityTrustHtml","i0","ɵɵdirectiveInject","i1","DomSanitizer","selectors","decls","vars","consts","template","EmojiDisplayComponent_Template","rf","ctx","ɵɵelement","ɵɵproperty","ɵɵsanitizeHtml"],"sources":["/Users/slavpisarov/Desktop/Feed-Buhi-Muhins/src/app/emoji-display/emoji-display.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport { DomSanitizer, SafeHtml } from '@angular/platform-browser';\n\n@Component({\n  selector: 'app-emoji-display',\n  // templateUrl: './emoji-display.component.html',\n  // styleUrls: ['./emoji-display.component.scss'],\n  template: `\n  <div [innerHTML]=\"emojiHTML\"></div>\n`\n})\n\nexport class EmojiDisplayComponent {\n  emojiHTML: SafeHtml;\n\n  constructor(private domSanitizer: DomSanitizer) {\n    // Get the HTML representation of the emoji and sanitize it\n    const emojiUnicode = '1F604'; // Replace this with the Unicode code point of your desired emoji\n    const emojiHTML = `&#x${emojiUnicode};`;\n    this.emojiHTML = this.domSanitizer.bypassSecurityTrustHtml(emojiHTML);\n  }\n}\n"],"mappings":";;AAYA,OAAM,MAAOA,qBAAqB;EAGhCC,YAAoBC,YAA0B;IAA1B,KAAAA,YAAY,GAAZA,YAAY;IAC9B;IACA,MAAMC,YAAY,GAAG,OAAO,CAAC,CAAC;IAC9B,MAAMC,SAAS,GAAG,MAAMD,YAAY,GAAG;IACvC,IAAI,CAACC,SAAS,GAAG,IAAI,CAACF,YAAY,CAACG,uBAAuB,CAACD,SAAS,CAAC;EACvE;;AARWJ,qBAAqB,C;mBAArBA,qBAAqB,EAAAM,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,YAAA;AAAA;AAArBT,qBAAqB,C;QAArBA,qBAAqB;EAAAU,SAAA;EAAAC,KAAA;EAAAC,IAAA;EAAAC,MAAA;EAAAC,QAAA,WAAAC,+BAAAC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MAJhCV,EAAA,CAAAY,SAAA,aAAmC;;;MAA9BZ,EAAA,CAAAa,UAAA,cAAAF,GAAA,CAAAb,SAAA,EAAAE,EAAA,CAAAc,cAAA,CAAuB"},"metadata":{},"sourceType":"module","externalDependencies":[]}